<!-- ***********************************************************************
File: NINE/XML/LYM_scene_NINE.xml

LYM NINE & Drawing Machine (c) Yukao Nagemi & Lola Ajima

************************************************************************* -->

<node id="root">
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ PARAMETERS +++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ EGG - SCAPHANDER +++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- phase of each layer opacity -->
  <set id="opacity0_phase" float_value="0" />
  <set id="opacity1_phase" float_value="180" />
  <set id="opacity2_phase" float_value="0" />

  <!-- amplitude of each layer opacity -->
  <set id="opacity0_amplitude" float_value="0.25" />
  <set id="opacity1_amplitude" float_value="0.25" />
  <set id="opacity2_amplitude" float_value="0.25" />
  <set id="opacity0_offset" float_value="0.5" />
  <set id="opacity1_offset" float_value="0.5" />
  <set id="opacity2_offset" float_value="0.5" />

  <!-- period of each layer opacity -->
  <set id="opacity0_period" float_value="0.3" />
  <set id="opacity1_period" float_value="0.7" />
  <set id="opacity2_period" float_value="0.5" />

  <!-- the basic step for opacity incrementation -->
  <!-- scaled by period -->
  <scalar id="opacity_step" type="float" value="2"/>

  <!-- layer opacity values initialized with phase-->
  <table id="opacity_angle02" type="float" size="3" 
	 value="({#opacity0_phase},{#opacity1_phase},
		{#opacity2_phase})"/>

  <!-- phase of each layer maskOpacity -->
  <set id="maskOpacity0_phase" float_value="-0.04" />
  <set id="maskOpacity1_phase" float_value="-0.02" />
  <set id="maskOpacity2_phase" float_value="-0.03" />

  <!-- amplitude of each layer maskOpacity -->
  <set id="maskOpacity0_amplitude" float_value="0.25" />
  <set id="maskOpacity1_amplitude" float_value="0.25" />
  <set id="maskOpacity2_amplitude" float_value="0.25" />
  <set id="maskOpacity0_offset" float_value="0.75" />
  <set id="maskOpacity1_offset" float_value="0.75" />
  <set id="maskOpacity2_offset" float_value="0.75" />

 <!-- period of each layer maskOpacity -->
  <set id="maskOpacity0_period" float_value="13" />
  <set id="maskOpacity1_period" float_value="17" />
  <set id="maskOpacity2_period" float_value="11" />

  <!-- the basic step for maskOpacity incrementation -->
  <!-- scaled by period -->
  <scalar id="maskOpacity_step" type="float" value="0.2"/>

  <!-- layer maskOpacity values initialized with phase-->
  <table id="maskOpacity_angle02" type="float" size="3" 
	 value="({#maskOpacity0_phase},{#maskOpacity1_phase},
		{#maskOpacity2_phase})"/>

  <!-- period of each layer opacity -->
  <set id="spread_radius_radial" float_value="0.001" />
  <set id="spread_radius_H" float_value="0.001" />
  <set id="spread_radius_V" float_value="0.001" />

  <!-- layer opacity values initialized with phase-->
  <table id="spread_radius_decay" type="float" size="4" 
	 value="({#spread_radius_radial},{#spread_radius_H},
		{#spread_radius_V},0)"/>

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++- VARIABLES ++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

  <scalar type="texture" id="MousePositionTexture_Even" 
	  texture_format="float_tex_format" mipmapped="false"
	  rectangle="true" nb_attachments="2" />
  <scalar type="texture" id="MousePositionTexture_Odd" 
	  texture_format="float_tex_format"  mipmapped="false"
	  rectangle="true" nb_attachments="2" />

  <scalar type="texture" id="FBStorage" 
	  texture_format="float_tex_format"  mipmapped="false"
	  rectangle="true" nb_attachments="1" />

  <!-- rendering parameters -->
  <scalar type="int" id="drawingMode" value="0" />
  <scalar type="int" id="rendering_mode" value="1" />
  <scalar type="int" id="brushID" value="0" />
  <scalar type="float" id="kaleidoscopeID" value="0" />
  <scalar type="float" id="BGEffectID" value="0" />
  <scalar type="float" id="with_BG" value="{#with_background}" />
  <scalar type="float" id="decay" value="0" />
  <scalar type="float" id="radiusX" value="3" />
  <scalar type="float" id="radiusY" value="3" />
  <scalar type="float" id="freqDots" value="1" />
  <table  type="float" size="4" id="local_color" value="(1,1,1,1)" />
  <table  type="float" size="4" id="local_color_memory" value="(1,1,1,1)" />
  <scalar type="int" size="4" id="local_color_count" value="0" />
  <table  type="float" size="4" id="blend_color" value="(1,1,1,1)" />
  <table  type="float" size="3" id="phase_amplitude_length" 
	  value="(75,53.23,0.01181)" />

  <!-- control parameters -->
  <scalar type="float" id="timer" value="0" />
  <scalar type="float" id="clearing_step" value="0" />

  <!-- sound parameters -->
  <table type="float" size="2" id="xy_spectrum" value="(0,0)" />
  <table type="float" size="4" id="color_spectrum" value="(0,0,0,1)" />
  <scalar type="float" id="spread_radius_vol" value="0" />
  <scalar type="float" id="brush_radius_vol" value="0" />
  <scalar type="int" id="x_loc" value="0" />
  <scalar type="int" id="y_loc" value="0" />

  <scalar type="float" id="xy_spectrum_coef" value="0" />
  <scalar type="float" id="color_spectrum_coef" value="0" />
  <scalar type="float" id="spread_radius_vol_coef" value="0" />
  <scalar type="float" id="brush_radius_vol_coef" value="0" />
  <scalar type="float" id="x_loc_coef" value="0" />
  <scalar type="float" id="y_loc_coef" value="0" />

  <!-- working variables -->
  <table  type="float" size="4" id="mouse_position_prev" value="(0,0,0,0)" />
  <table  type="float" size="4" id="filling_xy_modifier_nbFrames" value="(-1,-1,-1,-1)" />
  <scalar type="int" id="drawing_start_frame" value="0" />
  <scalar type="int" id="filling_start_frame" value="0" />
  <scalar type="int" id="clearFrame" value="0" />
  <scalar type="int" id="backtrack_begin_time" value="0" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++- PREDEFINED COMMANDS ++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ============================================= -->
  <!-- erase screen through strong decay =========== -->
  <!-- ============================================= -->
  <scalar id="decay_saved_FG" type="float">
    <interpolator id="decay_saved_FG" type="scalar" size="2">
      <schedule 
	 begin="300000000000" dur="10" repeatCount="1" 
	 mode="linear" fill="freeze" >
         <!-- updateScript>
           <command>
	     <action>
               <write_console value="interpolation ({$root:decay_saved_FG})"/>
	     </action>
           </command>
         </updateScript -->
         <completionScript>
           <command>
	     <action>
               <write_console value="end of stored BG interpolation"/>
	     </action>
           </command>
         </completionScript>
      </schedule>
      <scalar id="decay_saved_FG1" type="float" value="0"/>
      <scalar id="decay_saved_FG2" type="float" value="0"/>
    </interpolator>
  </scalar>

  <!-- video quad distorsion -->
  <table  type="float" size="4" id="BG_compositionOpacity">
    <interpolator id="BG_compositionOpacity" type="table" size="7">
      <schedule begin="300000000000" dur="300" repeatCount="1" mode="linear" fill="freeze"  ini="1" end="2" >
         <updateScript>
           <command>
	     <!-- action>
               <write_console value="/BG_opacity ({@root:BG_compositionOpacity})"/>
	     </action -->
	     <action>
               <set_material_attribute_value operator="=">
		 <shader_source cg_fs_4fv_BG_compositionOpacity="({@root:BG_compositionOpacity})"  />
               </set_material_attribute_value>
               <target type="multiple_nodes" value="#FinalQuad_*" />
	     </action>
            </command>
         </updateScript>
         <completionScript>
           <command>
	   <action>
             <write_console value="end of raising BG1 300s 5'00"/>
	   </action>
           </command>
         </completionScript>
      </schedule>
      <schedule begin="300000000000" dur="50" repeatCount="1" mode="linear" fill="freeze"  ini="2" end="3" >
         <updateScript>
           <command>
	     <!-- action>
               <write_console value="/BG_opacity ({@root:BG_compositionOpacity})"/>
	     </action -->
	     <action>
               <set_material_attribute_value operator="=">
		 <shader_source cg_fs_4fv_BG_compositionOpacity="({@root:BG_compositionOpacity})"  />
               </set_material_attribute_value>
               <target type="multiple_nodes" value="#FinalQuad_*" />
	     </action>
            </command>
         </updateScript>
         <completionScript>
           <command>
	   <action>
             <write_console value="end of plateau BG1 350s 5'50"/>
	   </action>
           </command>
         </completionScript>
      </schedule>
      <schedule begin="300000000000" dur="72" repeatCount="1" mode="linear" fill="freeze"  ini="3" end="4" >
         <updateScript>
           <command>
	     <!-- action>
               <write_console value="/BG_opacity ({@root:BG_compositionOpacity})"/>
	     </action -->
	     <action>
               <set_material_attribute_value operator="=">
		 <shader_source cg_fs_4fv_BG_compositionOpacity="({@root:BG_compositionOpacity})"  />
               </set_material_attribute_value>
               <target type="multiple_nodes" value="#FinalQuad_*" />
	     </action>
            </command>
         </updateScript>
         <completionScript>
           <command>
	   <action>
             <write_console value="end of BG1 422s 7'02"/>
	   </action>

	   <!-- no backgroiund effect -->
	   <action>
             <set_node_scalar_value id="BGEffectID" value="0" operator="=" />
             <target type="single_node" value="#root" />
	   </action>
	   
	   <action>
	     <write_console value="background effect: ({$root:BGEffectID})" />
	   </action>
	   
	   <action>
             <set_material_attribute_value operator="=">
               <shader_source cg_fs_3fv_kaleidoscopeID_BGfx_timer
			      ="(({$root:kaleidoscopeID}),({$root:BGEffectID}),({$root:timer}))" />
             </set_material_attribute_value>
             <target type="multiple_nodes" value="#FinalQuad_*" />
	   </action>
	   
           </command>
         </completionScript>
      </schedule>
      <schedule begin="300000000000" dur="120" repeatCount="1" mode="linear" fill="freeze"  ini="4" end="5" >
         <updateScript>
           <command>
	     <!-- action>
               <write_console value="/BG_opacity ({@root:BG_compositionOpacity})"/>
	     </action -->
	     <action>
               <set_material_attribute_value operator="=">
		 <shader_source cg_fs_4fv_BG_compositionOpacity="({@root:BG_compositionOpacity})"  />
               </set_material_attribute_value>
               <target type="multiple_nodes" value="#FinalQuad_*" />
	     </action>
            </command>
         </updateScript>
         <completionScript>
           <command>
	   <action>
             <write_console value="end of raising BG2 542s 9'02"/>
	   </action>
           </command>
         </completionScript>
      </schedule>
      <schedule begin="300000000000" dur="316" repeatCount="1" mode="linear" fill="freeze"  ini="5" end="6" >
         <updateScript>
           <command>
	     <!-- action>
               <write_console value="/BG_opacity ({@root:BG_compositionOpacity})"/>
	     </action -->
	     <action>
               <set_material_attribute_value operator="=">
		 <shader_source cg_fs_4fv_BG_compositionOpacity="({@root:BG_compositionOpacity})"  />
               </set_material_attribute_value>
               <target type="multiple_nodes" value="#FinalQuad_*" />
	     </action>
            </command>
         </updateScript>
         <completionScript>
           <command>
	   <action>
             <write_console value="end of plateau BG2 858s 14'18"/>
	   </action>
           </command>
         </completionScript>
      </schedule>
      <schedule begin="300000000000" dur="30" repeatCount="1" mode="linear" fill="freeze"  ini="6" end="7" >
         <updateScript>
           <command>
	     <!-- action>
               <write_console value="/BG_opacity ({@root:BG_compositionOpacity})"/>
	     </action -->
	     <action>
               <set_material_attribute_value operator="=">
		 <shader_source cg_fs_4fv_BG_compositionOpacity="({@root:BG_compositionOpacity})"  />
               </set_material_attribute_value>
               <target type="multiple_nodes" value="#FinalQuad_*" />
	     </action>
            </command>
         </updateScript>
         <completionScript>
           <command>
	   <action>
             <write_console value="end of BG2 858s 14'48"/>
	   </action>
           </command>
         </completionScript>
      </schedule>
      <table id="interp_ma01" type="float" size="4" value="(0,0,0,0)"/>
      <table id="interp_ma02" type="float" size="4" value="(1,0,0,0)"/>
      <table id="interp_ma03" type="float" size="4" value="(1,0,0,0)"/>
      <table id="interp_ma04" type="float" size="4" value="(0,0,0,0)"/>
      <table id="interp_ma05" type="float" size="4" value="(0,1,0,0)"/>
      <table id="interp_ma06" type="float" size="4" value="(0,1,0,0)"/>
      <table id="interp_ma07" type="float" size="4" value="(0,0,0,0)"/>
    </interpolator>
  </table>

  <!-- ============================================= -->
  <!-- INTIAL SCRIPT ======================== -->
  <!-- launch when the program begins -->
  <!-- ============================================= -->
  <initializationScript id="beginning script">
    <command>
      <action>
	<write_console value="decay ({$root:decay}) radius ({$root:radius}) brushID ({$root:brushID}) rendering mode ({$root:rendering_mode}))" />
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source 
	     cg_fs_4fv_radiusXY_brushID_rend_mode
	     ="(({$root:radiusX}),({$root:radiusY}),
	       ({$root:brushID}),({$root:rendering_mode}))" />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
      </action>
      <action>
        <set_material_attribute_value operator="=">
	  <shader_source cg_fs_4fv_spread_radius_decay="({@root:spread_radius_decay})"  />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source cg_fs_decay="({$root:decay})" />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#FinalQuad_*" />
      </action>

      <action>
	<write_console value="kaleidoscopeID ({$root:kaleidoscopeID}) BG Fx ({$root:BGEffectID}) " />
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source cg_fs_3fv_kaleidoscopeID_BGfx_timer
			 ="(({$root:kaleidoscopeID}),({$root:BGEffectID}),({$root:timer}))" />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#FinalQuad_*" />
      </action>

      <action>
        <write_console value="spread radius V/H/radial & decay ({@root:spread_radius_decay})"/>
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source cg_fs_4fv_spread_radius_decay="({@root:spread_radius_decay})"  />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
      </action>

      <action>
        <write_console value="local color ({@root:local_color})"/>
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source cg_fs_4fv_local_color="({@root:local_color})"  />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source cg_fs_4fv_local_color="({@root:local_color})"  />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#FinalQuad_*" />
      </action>
 
      <action>
        <write_console value="blend color ({@root:blend_color})"/>
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source cg_fs_4fv_blend_color="({@root:blend_color})"  />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#FinalQuad_*" />
      </action>

      <action>
        <write_console value="composition opacities ({@root:BG_compositionOpacity})"/>
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source cg_fs_4fv_compositionOpacity="({@root:BG_compositionOpacity})"  />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#FinalQuad_*" />
      </action>

      <action>
        <write_console value="Wave phaes/amplitude/length ({@root:phase_amplitude_length})"/>
      </action>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source cg_fs_3fv_phase_amplitude_length="({@root:phase_amplitude_length})"  />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#FinalQuad_*" />
      </action>

     </command>
  </initializationScript>

  <include xlink:href="NINE/XML/LYM_script_NINE.xml" />
  <include xlink:href="NINE/XML/LYM_aliasScript_NINE.xml" />

  <!--USER, LIGHTS, AND VIEWPOINTS-->
  <!--============================-->
  <node id="user_0">
    <user id="user_0">
      <viewpoints default_viewpoint="1" shots="0" />
      <navigation navigation_mode="quad" start_y="0.0" 
		  navigation_maximal_y="100" 
		  navigation_minimal_y="-100" 
		  navigation_step="0" start_x="0" start_z="0" 
		  start_pitch="0" start_yaw="0" 
		  rotation_amplitude_yaw="0" rotation_amplitude_pitch="0" />
      <view_volume type="ortho" x_min="0" x_max="{#width}" 
		   y_min="0" y_max="{#height}" 
		   near="-10" far="10" />
    </user>
  </node>

  <node id="user_1">
    <user id="user_1">
      <viewpoints default_viewpoint="1" shots="0" />
      <navigation navigation_mode="quad" start_y="0.0" 
		  navigation_maximal_y="100" 
		  navigation_minimal_y="-100" 
		  navigation_step="0" start_x="0" start_z="0" 
		  start_pitch="0" start_yaw="0" 
		  rotation_amplitude_yaw="0" rotation_amplitude_pitch="0" />
      <view_volume type="ortho" x_min="0" x_max="({#width}/1)" 
		   y_min="0" y_max="({#height}/1)" 
		   near="-10" far="10" />
    </user>
  </node>



  <node id="camera #1">
    <viewpoint id="camera #1"/>
  </node>


  <!--========================================================-->
  <!-- ping pong choice between MousePositionTexture_Odd 
       and MousePositionTexture_Even -->
  <!--========================================================-->
  <node id="SetMousePositionAndFBOPingPong">
    <renderingScript id="SetMousePositionAndFBOPingPong">
      <command>	
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- +++ mouse picking storage in case of filling command ++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<ifAction value1="({$config:mouse_button})" value2="0" 
		  bool_operator=">=">
	  <ifAction value1="({$config:mouse_x})" value2="0" 
		    bool_operator=">">
	    <action>
	      <set_node_table_value id="filling_xy_modifier_nbFrames" 
		value="(({$config:mouse_x}),({$config:mouse_y}),
		       ({$config:mouse_modifier}),
		       ({$config:current_frame}-{$root:filling_start_frame}-1))" 
				    operator="="/>
              <target type="single_node" value="#root" />
	    </action>
	  </ifAction>
	<elseAction/>
	  <action>
	    <set_node_table_value id="filling_xy_modifier_nbFrames" 
		  value="(-1,-1,-1,-1)" 
		  operator="="/>
            <set_node_scalar_value 
	       id="filling_start_frame" 
	       value="({$config:current_frame})" operator="=" />
            <target type="single_node" value="#root" />
	  </action>
	</ifAction>

	<!-- mouse position storage on the two quads -->
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
	       cg_fs_4fv_filling_xy_modifier_nbFrames
	       ="({@root:filling_xy_modifier_nbFrames})" 
	       cg_fs_3fv_H_drawingStart_drawingMode
	       ="({#height},({$root:drawing_start_frame}),
			 ({$root:drawingMode}))" 
	       cg_fs_4fv_xy_frameno_freqDots
	       ="(({$config:mouse_x}),({$config:mouse_y}),
		 ({$config:current_frame}),({$root:freqDots}))"
	       cg_fs_4fv_mouse_xy_prev
	       ="({@root:mouse_position_prev})" />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	</action>

	<!-- current frame storage on the two quads -->
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
	       cg_fs_3fv_xy_frameno
	       ="(({$config:mouse_x}),({$config:mouse_y}),
		 ({$config:current_frame}))" />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#FinalQuad_*" />
	</action>

	<!-- previous mouse position memory -->
	<action>
	  <set_node_table_value id="mouse_position_prev" 
		value="(({$root:mouse_position_prev[3]}),
		       ({$root:mouse_position_prev[4]}),
		       ({$config:mouse_x}),({$config:mouse_y}))" 
				operator="="/>
          <target type="single_node" value="#root"/>
	</action>

	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- ++++++++++ FBO ping pong choice and rendering +++++++++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<ifAction value1="({$config:current_frame}%2)" value2="1" 
		  bool_operator="==">
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#evenInput_oddOutput"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FBStartStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#QuadStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FBFinishStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FinalQuad_Odd"/>
	  </action>
	  
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#oddInput_evenOutput"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FBStartStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#QuadStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FBFinishStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FinalQuad_Even"/>
	  </action>
	  
	<elseAction/>
	  
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#evenInput_oddOutput"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FBStartStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#QuadStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FBFinishStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FinalQuad_Odd"/>
	  </action>
	  
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#oddInput_evenOutput"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FBStartStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#QuadStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FBFinishStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FinalQuad_Even"/>
	  </action>
	</ifAction>

	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++ OPACITY STEP ++++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
      
	<!-- increments the opacity step  -->
	<action>
	  <set_node_table_value id="opacity_angle02" 
       value="(({$root:opacity_step}*{#opacity0_period}),
	      ({$root:opacity_step}*{#opacity1_period}),
	      ({$root:opacity_step}*{#opacity2_period}))" 
			       operator="+="/>
	  <set_node_table_value id="maskOpacity_angle02" 
       value="(({$root:maskOpacity_step}*{#maskOpacity0_period}),
	      ({$root:maskOpacity_step}*{#maskOpacity1_period}),
	      ({$root:maskOpacity_step}*{#maskOpacity2_period}))" 
			       operator="+="/>
          <target type="single_node" value="#root"/>
	</action>

	<!-- stores the layer opacity in the shader -->
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
             cg_fs_4fv_opacity02_savedFG
     ="(({#opacity0_offset}
       +{#opacity0_amplitude}*cos({$root:opacity_angle02[1]}+{$root:opacity0_phase})),
       ({#opacity1_offset}
       +{#opacity1_amplitude}*cos({$root:opacity_angle02[2]}+{$root:opacity1_phase})),
       ({#opacity2_offset}
       +{#opacity2_amplitude}*cos({$root:opacity_angle02[3]}+{$root:opacity2_phase})),
       ({$root:decay_saved_FG}))"
             cg_fs_4fv_maskOpacity02
     ="({#maskOpacity0_offset}
       +({#maskOpacity0_amplitude}*cos({$root:maskOpacity_angle02[1]})),
       ({#maskOpacity1_offset}
       +{#maskOpacity1_amplitude}*cos({$root:maskOpacity_angle02[2]})),
       ({#maskOpacity2_offset}
       +{#maskOpacity2_amplitude}*cos({$root:maskOpacity_angle02[3]})))"
	     />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#FinalQuad_*" />
	</action>
	
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++ 3rd STEP FB BLEND +++++++++++++++++++++ -->
	<!-- +++++++++++++++++ CLEARUP CLEARING ++++++++++++++++++++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- *** SHOULD BE PLACED BEFORE THE 2ND STEP TO AVOID BEING * -->
	<!-- *** INTERPRETED AT THE SAME FRAME *********************** -->
	<ifAction value1="({$root:clearing_step})" value2="3" 
		  bool_operator="==">

	  <action>
            <set_material_attribute_value operator="=">
              <shader_source cg_fs_clearup ="0" />
            </set_material_attribute_value>
            <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	  </action>
	  <action>
	    <set_node_scalar_value id="clearing_step" value="0" operator="="/>
            <target type="single_node" value="#root"/>
	  </action>
	</ifAction>

	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++ 2nd STEP FB BLEND +++++++++++++++++++++ -->
	<!-- +++++++++++++++++ CLEARING STEP +++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<ifAction value1="({$root:clearing_step})" value2="2" 
		  bool_operator="==">

	  <!-- hides the nodes used for FB saving -->
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="multiple_nodes" value="#displayStoredFB"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="multiple_nodes" value="#FBStorage_node"/>
	  </action>

	  <!-- clears the parameters -->
	  <action>
            <send_message value = "CLEAR"/>
            <target type = "single_node" value = "#root"/>
	  </action>

	  <!-- starts blending -->
	  <action>
            <set_node_scalar_value id="decay_saved_FG1" 
				   value="1" operator="=" />
            <target type="single_node" value="#root" />
	  </action>
	  <action>
	    <set_schedule_attribute_value 
	       variable="decay_saved_FG" index="1" operator="=">
	      <schedule begin="now" />
	    </set_schedule_attribute_value>
            <target type="single_node" value="#root" />
	  </action>

	  <!-- changes control variable -->
	  <action>
	    <set_node_scalar_value id="clearing_step" value="3" operator="="/>
            <target type="single_node" value="#root"/>
	  </action>
	</ifAction>
	
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++ SPECTRUM ++++++++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<action>
          <set_node_scalar_value 
	     id="mouse_x" 
	     value="({$root:xy_spectrum_coef}*{$root:xy_spectrum[1]})" 
	     operator="+=" />
          <set_node_scalar_value 
	     id="mouse_y" 
	     value="({$root:xy_spectrum_coef}*{$root:xy_spectrum[2]})" 
	     operator="+=" />
          <target type="single_node" value="#config" />
	</action>
	<action>
          <set_material_attribute_value operator="=">
            <shader_source cg_fs_4fv_local_color="(
({$root:local_color[1]}+(({$root:color_spectrum_coef}*{$root:color_spectrum[1]}))),
({$root:local_color[2]}+(({$root:color_spectrum_coef}*{$root:color_spectrum[2]}))),
({$root:local_color[3]}+(({$root:color_spectrum_coef}*{$root:color_spectrum[3]})))
({$root:local_color[4]}))"  />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	</action>
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
	       cg_fs_4fv_spread_radius_decay="(
({$root:spread_radius_decay[1]}+({$root:spread_radius_vol_coef}*{$root:spread_radius_vol})),
({$root:spread_radius_decay[2]}+({$root:spread_radius_vol_coef}*{$root:spread_radius_vol})),
({$root:spread_radius_decay[3]}+({$root:spread_radius_vol_coef}*{$root:spread_radius_vol})),
({$root:decay}))"  />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	</action>
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
	       cg_fs_4fv_radiusXY_brushID_rend_mode="(
({$root:radiusX}+({$root:brush_radius_vol_coef}*{$root:brush_radius_vol})),
({$root:radiusY}+({$root:brush_radius_vol_coef}*{$root:brush_radius_vol})),
({$root:brushID}),
({$root:rendering_mode}))" />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	</action>
	<action>
          <set_node_scalar_value 
	     id="mouse_x" 
	     value="({$root:x_loc_coef}*{$root:x_loc})" 
	     operator="+=" />
          <set_node_scalar_value 
	     id="mouse_y" 
	     value="({$root:y_loc_coef}*{$root:y_loc})" 
	     operator="+=" />
          <target type="single_node" value="#config" />
	</action>
      </command>
      
    </renderingScript>
    <quad id="NullQuad" x1="0" y1="0" z1="0" x2="0" y2="0" z2="0" x3="0" y3="0" z3="0" x4="0" y4="0" z4="0"></quad>
  </node>




  <!--========================================================-->
  <!-- DRAWING                                             -->
  <!--========================================================-->
  <!-- FOREGROUND + COMPOSITION -->
  <node id="foreground_transl" displayed="true">
    <transformation id="foreground_transl" geometry="translation" 
		    x="0" y="0" z="0"/>
    <node id="foreground rotate" displayed="true">
      <transformation id="foreground rotate" geometry="rotation" 
			x="0.0" y="0.0" z="1.0" angle="0.0"/>
      
      <use xlink:href="NINE/XML/LYM_NINE.xml:#drawing_node" />
      
    </node>
  </node>
 
  <!-- node id="pixel_readerR">
    <pixel_reader id="pixel_reader" x="100" y="100" />
  </node -->
	
</node>
