<!-- ***********************************************************************
File: dcONT/XML/LYM_scene_dcONT.xml

LYM dcONT & Drawing Machine (c) Yukao Nagemi & Lola Ajima

************************************************************************* -->

<node id="root">
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ PARAMETERS +++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

  <!-- initialization of scale -->
  <set id="scale_ini" float_value="1" />
  <set id="nb_scale_steps" value="5" />

  <!-- number of pens -->
  <set id="nb_brush" value="6" />

  <!-- number of pens -->
  <set id="nb_setups" value="13" />

  <!-- number of drawing modes -->
  <set id="nb_drawingModes" value="4" />

  <!-- number of particle modes -->
  <set id="nb_particleMode" value="3" />

  <!-- number of color mapping between sound analysis and color rendering -->
  <set id="nb_RGBspectrums" value="6" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ dcONT - Game Of Life +++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- game of life  -->
  <set id="dcONTradius_ini" float_value="10" />

  <!-- game of life vs drawing weighting  -->
  <set id="dcONTWeight_ini" float_value="1" />
  <set id="drawingWeight_ini" float_value="1" />

  <!-- game of life vs drawing weighting  -->
  <set id="nb_drawContmodes" value="4" />
  <set id="nb_flashContmodes" value="4" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ PARTICLES ++++++++++++++++++++++++  -->
  <set id="particle_acceleration_factor_ini" float_value="0.00001" />
  <set id="nb_particle_acceleration_textures" value="5" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++- VARIABLES ++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

  <!-- FBOs -->
  <scalar type="texture" id="MousePositionTexture_Even" 
	  texture_format="float_tex_format" mipmapped="false"
	  rectangle="true" nb_attachments="2" />
  <scalar type="texture" id="MousePositionTexture_Odd" 
	  texture_format="float_tex_format"  mipmapped="false"
	  rectangle="true" nb_attachments="2" />

  <!-- mouse position -->
  <scalar type="float" id="pointer_x" value="0" />
  <scalar type="float" id="pointer_y" value="0" />

  <!-- cursor size -->
  <scalar type="float" id="cursorSize" value="0" />

  <!-- copy values for precaptured images -->
  <scalar type="float" id="imgCpy1" value="0" />
  <scalar type="float" id="imgCpy2" value="0" />

  <!-- working variables -->
  <table  type="float" size="6" id="mouse_position_prev" 
	  value="(0,0,0,0,0,0)" />
  <scalar type="int" id="drawing_start_frame" value="0" />
  <scalar type="int" id="backtrack_begin_time" value="0" />

  <!-- display of decay signs with arrows -->
  <scalar type="int" id="decaySigns" value="0" />

  <!-- feedback -->
  <scalar type="float" id="echo" value="0" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ MUSIC CONTROL ++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- music control inputs -->
  <table type="float" size="2" id="xy_spectrum" value="(0,0)" />
  <table type="float" size="4" id="color_spectrum" value="(0,0,0,1)" />
  <scalar type="float" id="brush_radius_vol" value="0" />
  <scalar type="float" id="particle_acc_attack" value="0" />

  <!-- music control coefficients -->
  <scalar type="float" id="xy_spectrum_coef" value="0" />
  <scalar type="float" id="color_spectrum_coef" value="0" />
  <scalar type="float" id="brush_radius_vol_coef" value="0" />
  <scalar type="float" id="particle_acc_attack_coef" value="0" />

  <!-- color mapping between sound analysis and color rendering -->
  <scalar type="int" id="RGBspectrum" value="0" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ DRAWING ++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- drawing parameters -->
  <table  type="float" size="4" id="local_color" value="(1,1,1,1)" />
  <scalar type="float" id="brushRadius" value="3" />
  <scalar type="float" id="freqDots" value="1" />
  <scalar type="int" id="drawingMode" value="0" />
  <scalar type="int" id="drawingMode_saved" value="0" />  <!-- for drawing mode on/off -->
  <scalar type="int" id="brushID" value="0" />
  <scalar type="float" id="blendTransp" value="1" />

  <!-- pixellization parameters -->
  <scalar type="float" id="pixellization" value="0" />
  <!-- scale parameters -->
  <scalar type="float" id="scale" value="{#scale_ini}" />
  <table  type="float" size="{#nb_scale_steps}" id="scale_steps" 
	  value="(1,0.5,0.25,0.125,0.06)" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ PARTICLES ++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- particles on/off  -->
  <scalar type="int" id="particleMode" value="0" />
  <scalar type="int" id="particleMode_saved" value="0" /> <!-- for freeze -->

  <scalar type="int" id="particle_texture" value="0" />

  <!-- particles acceleration factor  -->
  <scalar type="float" id="particle_acceleration_factor" value="{#particle_acceleration_factor_ini}" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ dcONT - Game Of Life +++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- game of life parameters -->
  <scalar type="int" id="dcONT_radius" value="{#dcONTradius_ini}" />
  <scalar type="float" id="dcONTneighbors_min" value="0" />
  <scalar type="float" id="dcONTneighbors_max" value="0" />
  <scalar type="float" id="dcONTparents_min" value="0" />
  <scalar type="float" id="dcONTparents_max" value="0" />

  <!-- game of life update frequency  -->
  <scalar type="float" id="dcONTFreq" value="1" />

  <!-- game of life transfer from drawing layer mode  -->
  <scalar type="float" id="drawContmode" value="0" />
  <scalar type="float" id="flashContmode" value="0" />

  <!-- game of life refeeding  -->
  <scalar type="float" id="flash" value="0" />
  <scalar type="float" id="backFlash" value="0" />

  <!-- game of life level and nb of extended neighbors  -->
  <scalar type="float" id="GOL_preset" value="0" />
  <scalar type="int" id="dcONT_nbExtNeighbors" value="0" />

  <!-- game of life freeze  -->
  <scalar type="float" id="GOL_preset_saved" value="0" />
  <scalar type="float" id="dcONTparents_min_saved" value="0" />

  <!-- standard preset dcONT -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_0" 
	  value="(0,0,0,0)" />
  <!-- standard preset dcONT -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_1" 
	  value="(3,3,2,3)" />
  <!-- standard preset high life -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_2" 
	  value="(3,6,2,3)" />
  <!-- standard preset high life extended neighborhood -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_3" 
	  value="(3,6,2,3)" />
  <!-- SierpiÅ„ski triangle -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_4" 
	  value="(1,1,1,2)" />
  <!-- vibrating background -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_5" 
	  value="(1,2,3,4)" />
  <!-- soft vibrating background -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_6" 
	  value="(1,2,4,6)" />
  <!-- rough vibrating background -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_7" 
	  value="(2,10,4,6)" />
  <!-- mixture of background and some dcONT patterns -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_8" 
	  value="(2,6,5,6)" />
  <!-- active marble background -->
  <table  type="float" size="4" id="dcONTparents_neighbors_presets_9" 
	  value="(2,7,5,7)" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ dcONT & drawing combination ++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- dcONT vs drawing weighting  -->
  <scalar type="float" id="dcONTWeight" value="{#dcONTWeight_ini}" />
  <scalar type="float" id="drawingWeight" value="{#drawingWeight_ini}" />

  <!-- dcONT and drawing decay parameters -->
  <scalar type="float" id="GOLdecay" value="0" />
  <scalar type="float" id="drawingdecay" value="0" />
  <scalar type="float" id="GOLdecay_sign" value="1" />
  <scalar type="float" id="drawingdecay_sign" value="1" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- ++++++++++++++++++++++ SET-UPS ++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- 1: drawing mode (eg line) -->
  <!-- 2: flash contamination mode -->
  <!-- 3: Brush -->
  <!-- 4: Texture -->
  <!-- 5: dcONT gain sign -->
  <!-- 6: Drawing gain sign -->
  <!-- 7: Palette -->
  <!-- 8: dcONT mode -->
  <!-- 9: Particle mode -->
  <!-- 10: Scale -->
  <scalar type="int" id="setup" value="-1" />
  <table  type="float" size="10" id="cur_setup" value="(0,0,0,0,0,0,0,0,0,1)" />

  <!-- Default  -->
  <table  type="float" size="10" id="setup_0" value="(0,0,0,0,0,0,0,0,0,1)" />
  <!-- Matches  -->
  <table  type="float" size="10" id="setup_1" value="(1,0,1,2,-1,1,2,1,2,0.06)" />
  <!-- En retard  -->
  <table  type="float" size="10" id="setup_2" value="(1,0,4,2,-1,1,4,1,0,1)" />
  <!-- Forest 1 -->
  <table  type="float" size="10" id="setup_3" value="(1,0,0,2,-1,1,4,5,0,1)" />
  <!-- Forest 2 -->
  <table  type="float" size="10" id="setup_4" value="(1,0,0,2,1,1,4,0,0,1)" />
  <!-- Forest 3 -->
  <table  type="float" size="10" id="setup_5" value="(2,0,1,2,1,1,4,6,1,1)" />
  <!-- Fur -->
  <table  type="float" size="10" id="setup_6" value="(1,0,0,0,1,1,2,0,2,1)" />
  <!-- Petri -->
  <table  type="float" size="10" id="setup_7" value="(1,0,0,0,-1,-1,2,1,1,1)" />
  <!-- Imprint 1 -->
  <table  type="float" size="10" id="setup_8" value="(3,0,3,0,-1,1,6,1,1,1)" />
  <!-- Imprint 2 -->
  <table  type="float" size="10" id="setup_9" value="(1,0,0,0,1,1,0,1,0,1)" />
  <!-- Imprint 3 -->
  <table  type="float" size="10" id="setup_10" value="(1,0,0,0,-1,1,4,4,0,1)" />
  <!-- Cell 1 -->
  <table  type="float" size="10" id="setup_11" value="(2,0,0,0,-1,1,4,8,0,1)" />
  <!-- Cell 2 -->
  <table  type="float" size="10" id="setup_12" value="(1,0,0,4,1,-1,6,8,1,1)" />
  <!-- Cell 3 -->
  <table  type="float" size="10" id="setup_13" value="(3,0,5,3,1,-1,6,3,1,1)" />
  <!-- End -->
  <table  type="float" size="10" id="setup_14" value="(3,0,5,3,1,-1,6,3,1,1)" />

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++- RAMPS ++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

  <table  type="float" size="4" id="ramp_brushRadius_color">
    <interpolator id="ramp_brushRadius_color" type="table" size="3">
      <schedule 
	 begin="300000000000" dur="0.1" repeatCount="1" 
	 mode="sinus" fill="freeze" ini="1" end="2" >
        <updateScript>
          <command>
	    <action>
              <set_node_scalar_value id="brushRadius" 
				     value="({$root:ramp_brushRadius_color[1]})" 
				     operator="=" />
              <target type="single_node" value="#root" />
	    </action>
	    <action>
              <write_console value="ramp_brushRadius ({$root:ramp_brushRadius_color[1]})"/>
	    </action>
	    <action>
              <set_material_attribute_value operator="=">
		<shader_source 
		   glsl_fs_4fv_brushRadius_dcONTFreq_brushID_dcONTradius
		   ="(({$root:brushRadius}),({$root:dcONTFreq}),
		     ({$root:brushID}),({$root:dcONT_radius}))" />
              </set_material_attribute_value>
              <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	    </action>
	    <action>
	      <set_node_table_value id="local_color" 
				    value="(({$root:ramp_brushRadius_color[2]}),({$root:ramp_brushRadius_color[3]}),({$root:ramp_brushRadius_color[4]}),({$root:local_color[4]}))" 
				    operator="="/>
              <target type="single_node" value="#root"/>
	    </action>
	    <action>
              <set_material_attribute_value operator="=">
		<shader_source glsl_fs_4fv_local_color="({@root:local_color})"  />
              </set_material_attribute_value>
              <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	    </action>
	    <action>
	      <send_message_udp pattern="f" value="/radius_can ({$root:brushRadius})" />
	      <target type="single_host" value="udp_PD" />
	    </action>
          </command>
        </updateScript>
      </schedule>
      <schedule 
	 begin="300000000000" dur="1" repeatCount="1" 
	 mode="sinus" fill="freeze" ini="2" end="3" >
        <updateScript>
          <command>
	    <action>
              <set_node_scalar_value id="brushRadius" 
				     value="({$root:ramp_brushRadius_color[1]})" 
				     operator="=" />
              <target type="single_node" value="#root" />
	    </action>
	    <action>
              <write_console value="ramp_brushRadius_color ({$root:ramp_brushRadius_color[1]})"/>
	    </action>
	    <action>
              <set_material_attribute_value operator="=">
		<shader_source 
		   glsl_fs_4fv_brushRadius_dcONTFreq_brushID_dcONTradius
		   ="(({$root:brushRadius}),({$root:dcONTFreq}),
		     ({$root:brushID}),({$root:dcONT_radius}))" />
              </set_material_attribute_value>
              <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	    </action>
	    <action>
	      <set_node_table_value id="local_color" 
				    value="(({$root:ramp_brushRadius_color[2]}),({$root:ramp_brushRadius_color[3]}),({$root:ramp_brushRadius_color[4]}),({$root:local_color[4]}))" 
				    operator="="/>
              <target type="single_node" value="#root"/>
	    </action>
	    <action>
              <set_material_attribute_value operator="=">
		<shader_source glsl_fs_4fv_local_color="({@root:local_color})"  />
              </set_material_attribute_value>
              <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	    </action>
	    <action>
	      <send_message_udp pattern="f" value="/radius_can ({$root:brushRadius})" />
	      <target type="single_host" value="udp_PD" />
	    </action>
          </command>
        </updateScript>
      </schedule>
      <table id="ramp_brushRadius_color1" type="float" size="4" value="(0,0,0,0)"/>
      <table id="ramp_brushRadius_color2" type="float" size="4" value="(0,1,1,1)"/>
      <table id="ramp_brushRadius_color3" type="float" size="4" value="(0,0,0,0)"/>
    </interpolator>
  </table>

  <!-- ============================================= -->
  <!-- INTIAL SCRIPT ======================== -->
  <!-- launch when the program begins -->
  <!-- ============================================= -->
  <initializationScript id="beginning script">
    <command>
      <action>
        <set_material_attribute_value operator="=">
          <shader_source 
	     glsl_fs_4fv_brushRadius_dcONTFreq_brushID_dcONTradius
	     ="(({$root:brushRadius}),({$root:dcONTFreq}),
	       ({$root:brushID}),({$root:dcONT_radius}))" 
	     glsl_fs_4fv_GOLdecay_drawingdecay_flash_backFlash="(({$root:GOLdecay}*{$root:GOLdecay_sign}),({$root:drawingdecay}*{$root:drawingdecay_sign}),({$root:flash}),({$root:backFlash}))" 
	     glsl_fs_4fv_partMode_acc_flashContmode_partTexture="(({$root:particleMode}),({$root:particle_acceleration_factor}+{$root:particle_acc_attack}),({$root:flashContmode}),({$root:particle_texture}))"
	     glsl_fs_4fv_local_color="({@root:local_color})"  />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
      </action>

      <action>
        <set_material_attribute_value operator="=">
          <shader_source 
	      glsl_fs_4fv_dcONTWeight_drawingWeight_blendTransp_pixellization
	      ="(({$root:dcONTWeight}),({$root:drawingWeight}),({$root:blendTransp}),({$root:pixellization}))" 
	      glsl_fs_4fv_width_height_trace_scale
	      ="({#width},{#height},0,({$root:scale}))" />
        </set_material_attribute_value>
        <target type="multiple_nodes" value="#FinalQuad_*" />
      </action>
    </command>
  </initializationScript>

  <include xlink:href="ProjectsBefore18/dcONT/XML/LYM_script_dcONT.xml" />
  <include xlink:href="ProjectsBefore18/dcONT/XML/LYM_aliasScript_dcONT.xml" />

  <!--============================-->
  <!--USER, LIGHTS, AND VIEWPOINTS-->
  <!--============================-->
  <node id="user_0">
    <user id="user_0">
      <viewpoints default_viewpoint="1" shots="0" />
      <navigation navigation_mode="quad" start_y="0.0" 
		  navigation_maximal_y="100" 
		  navigation_minimal_y="-100" 
		  navigation_step="0" start_x="0" start_z="0" 
		  start_pitch="0" start_yaw="0" 
		  rotation_amplitude_yaw="0" rotation_amplitude_pitch="0" />
      <view_volume type="ortho" x_min="0" x_max="{#width}" 
		   y_min="0" y_max="{#height}" 
		   near="-10" far="10" />
    </user>
  </node>

  <node id="camera #1">
    <viewpoint id="camera #1"/>
  </node>


  <!--========================================================-->
  <!-- ping pong choice between MousePositionTexture_Odd 
       and MousePositionTexture_Even -->
  <!--========================================================-->
  <node id="SetMousePositionAndFBOPingPong">
    <renderingScript id="SetMousePositionAndFBOPingPong">
      <command>	
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- +++ mouse pointer adjustment according to scaling +++++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<action>
          <set_node_scalar_value
	     id="pointer_x" value="({$config:mouse_x}-({#width}/2.0)+{$root:scale_center_X})" operator="=" />
          <set_node_scalar_value 
	     id="pointer_y" value="({$config:mouse_y}+{#height}/2.0-{$root:scale_center_Y})" operator="=" />
          <set_node_scalar_value 
	     id="pointer_x" value="({$root:scale})" operator="*=" />
          <set_node_scalar_value 
	     id="pointer_y" value="({$root:scale})" operator="*=" />
          <set_node_scalar_value 
	     id="pointer_x" value="({#width}/2.0)" operator="+=" />
          <set_node_scalar_value 
	     id="pointer_y" value="({$root:pointer_y}-{#height}/2.0)" operator="=" />
          <target type="single_node" value="#root" />
	</action>
	<!-- action>
           <set_node_scalar_value
	     id="pointer_x" value="min({#width},{$root:pointer_x})" operator="=" />
          <set_node_scalar_value
	     id="pointer_y" value="min({#height},{$root:pointer_y})" operator="=" />
          <target type="single_node" value="#root" />
	</action>
	<action>
          <set_node_scalar_value
	     id="pointer_x" value="max(0,{$root:pointer_x})" operator="=" />
          <set_node_scalar_value
	     id="pointer_y" value="max(0,{$root:pointer_y})" operator="=" />
          <target type="single_node" value="#root" />
	</action -->

	<action>
          <set_node_scalar_value 
	     id="pointer_x" 
	     value="({$root:xy_spectrum[1]})" 
	     operator="+=" />
          <set_node_scalar_value 
	     id="pointer_y" 
	     value="({$root:xy_spectrum[2]})" 
	     operator="+=" />
          <target type="single_node" value="#root" />
	</action>

	<!-- Bezier drawing mode -->
	<ifAction value1="({$root:drawingMode})" value2="2" 
		  bool_operator="==">
	  <!-- odd frame that corresponds to curve drawing -->
	  <ifAction value1="(({$config:current_frame}-{$root:drawing_start_frame})%2)" value2="0" 
		    bool_operator="==">

	    <!-- replaces the point before the current mouse positiion
		 with the middle point between n - 2 and current position,
		 so that the Bezier curves are in C1 continuity -->
	    <action>
	      <set_node_table_value id="mouse_position_prev" 
				    value="((0.5*{$root:pointer_x}+0.5*{$root:mouse_position_prev[3]}),
					   (0.5*{$root:pointer_y}+0.5*{$root:mouse_position_prev[4]}),
					   ({$root:mouse_position_prev[3]}),
					   ({$root:mouse_position_prev[4]}),
					   ({$root:mouse_position_prev[5]}),
					   ({$root:mouse_position_prev[6]}))" 
				    operator="="/>
              <target type="single_node" value="#root"/>
	    </action>
	  </ifAction>

	  <!-- mouse position storage on the two quads -->
	  <action>
            <set_material_attribute_value operator="=">
              <shader_source 
		 glsl_fs_4fv_W_H_drawingStart_drawingMode
	         ="(({$root:scale}*{$config:window_width}),
		   ({$root:scale}*{$config:window_height}),
		   ({$root:drawing_start_frame}),
		   ({$root:drawingMode}))"   
		 glsl_fs_4fv_xy_frameno_freqDots
		 ="(({$root:mouse_position_prev[1]}),
		   ({$root:mouse_position_prev[2]}),
		   ({$config:current_frame}),({$root:freqDots}))"
		 glsl_fs_4fv_mouse_xy_prev
		 ="(({$root:mouse_position_prev[3]}),
		   ({$root:mouse_position_prev[4]}),
		   ({$root:mouse_position_prev[5]}),
		   ({$root:mouse_position_prev[6]}))" />
            </set_material_attribute_value>
            <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	  </action>
	  <!--action>
            <write_console value="cur ({$QuadStoreMousePosition_Odd:glsl_fs_4fv_xy_frameno_freqDots[1]}),({$QuadStoreMousePosition_Odd:glsl_fs_4fv_xy_frameno_freqDots[2]}) prev ({@QuadStoreMousePosition_Odd:glsl_fs_4fv_mouse_xy_prev}) pointer ({$root:pointer_x})x({$root:pointer_y})"/>
            <write_console value="frameNo (({$QuadStoreMousePosition_Odd:glsl_fs_4fv_xy_frameno_freqDots[3]}-{$QuadStoreMousePosition_Odd:glsl_fs_4fv_W_H_drawingStart_drawingMode[3]})%2)"/>
            <write_console value=" "/>
	  </action -->
	  <elseAction/>
	  <!-- point or line drawing mode -->
	  <!-- mouse position storage on the two quads -->
	  <action>
            <set_material_attribute_value operator="=">
              <shader_source 
		 glsl_fs_4fv_W_H_drawingStart_drawingMode
	         ="(({$root:scale}*{$config:window_width}),
		   ({$root:scale}*{$config:window_height}),
		   ({$root:drawing_start_frame}),
		   ({$root:drawingMode}))"   
		 glsl_fs_4fv_xy_frameno_freqDots
		 ="(({$root:pointer_x}),({$root:pointer_y}),
		   ({$config:current_frame}),({$root:freqDots}))"
		 glsl_fs_4fv_mouse_xy_prev
		 ="(({$root:mouse_position_prev[1]}),
		   ({$root:mouse_position_prev[2]}),
		   ({$root:mouse_position_prev[3]}),
		   ({$root:mouse_position_prev[4]}))" />
            </set_material_attribute_value>
            <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	  </action>
	</ifAction>

	<!-- current frame storage on the two quads -->
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
	       glsl_fs_4fv_xy_frameno_cursorSize
	       ="(({$config:mouse_x}),
		 ({$config:mouse_y}),
		 ({$config:current_frame}),
		 ({$root:cursorSize}))" />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#FinalQuad_*" />
	</action>

	<!-- previous mouse position memory -->
	<action>
	  <set_node_table_value id="mouse_position_prev" 
		value="(({$root:pointer_x}),
		       ({$root:pointer_y}),
		       ({$root:mouse_position_prev[1]}),
		       ({$root:mouse_position_prev[2]}),
		       ({$root:mouse_position_prev[3]}),
		       ({$root:mouse_position_prev[4]}))" 
				operator="="/>
          <target type="single_node" value="#root"/>
	</action>
	<!-- action>
	  <send_message_udp pattern="f" value="/speed ({$root:pointer_x}-{$root:mouse_position_prev[3]}) ({$root:pointer_y}-{$root:mouse_position_prev[4]})" />
	  <target type="single_host" value="udp_SC" />
	</action -->
	<!-- action>
          <write_console value="/speed ({$root:pointer_x}-{$root:mouse_position_prev[3]}) ({$root:pointer_y}-{$root:mouse_position_prev[4]})"/>
	</action -->

	<!-- flash management: restores flash to 0 so that
	     it does not stay on more than one frame -->
	<action>
          <set_material_attribute_value operator="=">
	    <shader_source glsl_fs_4fv_GOLdecay_drawingdecay_flash_backFlash
			   ="(({$root:GOLdecay}*{$root:GOLdecay_sign}),
			     ({$root:drawingdecay}*{$root:drawingdecay_sign}),
			     ({$root:flash}),({$root:backFlash}))"  />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	</action>
	<action>
          <set_node_scalar_value id="flash" value="0" operator="=" />
          <set_node_scalar_value id="backFlash" value="0" operator="=" />
          <target type="single_node" value="#root" />
	</action>

	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- ++++++++++ FBO ping pong choice and rendering +++++++++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<ifAction value1="({$config:current_frame}%2)" value2="1" 
		  bool_operator="==">
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#evenInput_oddOutput"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FBStartStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#QuadStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FBFinishStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FinalQuad_Odd"/>
	  </action>
	  
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#oddInput_evenOutput"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FBStartStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#QuadStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FBFinishStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FinalQuad_Even"/>
	  </action>
	  
	<elseAction/>
	  
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#evenInput_oddOutput"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FBStartStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#QuadStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FBFinishStoreMousePosition_Odd"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="false" operator="=" />
            <target type="single_node" value="#FinalQuad_Odd"/>
	  </action>
	  
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#oddInput_evenOutput"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FBStartStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#QuadStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FBFinishStoreMousePosition_Even"/>
	  </action>
	  <action>
            <set_node_attribute_value displayed="true" operator="=" />
            <target type="single_node" value="#FinalQuad_Even"/>
	  </action>
	</ifAction>

	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++ MUSIC CONTROL +++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- color -->
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
	       glsl_fs_4fv_local_color
	       ="(({$root:local_color[1]}+{$root:color_spectrum[1]}),
		 ({$root:local_color[2]}+{$root:color_spectrum[2]}),
		 ({$root:local_color[3]}+{$root:color_spectrum[3]}),
		 ({$root:local_color[4]}))"  />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	</action>
	<!-- action>
          <write_console value="cur ({@QuadStoreMousePosition_Odd:glsl_fs_4fv_local_color})"/>
            <write_console value=" "/>
	</action -->
	<!-- radius -->
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
	       glsl_fs_4fv_brushRadius_dcONTFreq_brushID_dcONTradius
	       ="(({$root:brushRadius}+{$root:brush_radius_vol}),
		 ({$root:dcONTFreq}),
		 ({$root:brushID}),({$root:dcONT_radius}))" />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	</action>
	<action>
          <set_material_attribute_value operator="=">
            <shader_source 
	       glsl_fs_4fv_partMode_acc_flashContmode_partTexture="(({$root:particleMode}),({$root:particle_acceleration_factor}+{$root:particle_acc_attack}),({$root:flashContmode}),({$root:particle_texture}))" />
          </set_material_attribute_value>
          <target type="multiple_nodes" value="#QuadStoreMousePosition_*" />
	</action>

	<!-- action>
          <write_console value="cur ({@QuadStoreMousePosition_Odd:glsl_fs_4fv_brushRadius_dcONTFreq_brushID_dcONTradius})"/>
            <write_console value=" "/>
	</action -->
      </command>
      
    </renderingScript>
    <quad id="NullQuad" x1="0" y1="0" z1="0" x2="0" y2="0" z2="0" x3="0" y3="0" z3="0" x4="0" y4="0" z4="0"></quad>
  </node>


  <!--========================================================-->
  <!-- DRAWING                                                -->
  <!--========================================================-->
  <!-- FOREGROUND + COMPOSITION -->
  <node id="foreground_transl" displayed="true">
    <transformation id="foreground_transl" geometry="translation" 
		    x="0" y="0" z="0"/>
    <node id="foreground rotate" displayed="true">
      <transformation id="foreground rotate" geometry="rotation" 
			x="0.0" y="0.0" z="1.0" angle="0.0"/>
      
      <use xlink:href="ProjectsBefore18/dcONT/XML/LYM_dcONT.xml:#drawing_node" />
      
    </node>
  </node>
 


  <!--========================================================-->
  <!-- SCREEN READING AND FORWARDING TO AUDIO                 -->
  <!--========================================================-->
  <!-- node id="pixel_reader">
    <pixel_reader id="pixel_reader" x="100" y="100"
		  offset_x="0" offset_y="0" size_x="4" size_y="4" />
  </node -->

  <!-- node id="ReadScreenValues_node">
    <renderingScript id="ReadScreenValues_script">
      <command>
	<action>
          <set_node_attribute_value operator="=">
	    <pixel_reader  x="({$root:pointer_x})" y="({$root:pointer_y})" />
          </set_node_attribute_value>
          <target type="single_node" value="#pixel_reader"/>
	</action>
	<action>
	  <send_message_udp pattern="f f f f f f f f f f f f f f f f" value="/pixels ({@config:frame_color_r})" />
	  <target type="single_host" value="udp_SC" />
	</action -->

	<!-- action>
          <write_console value="pointer ({$root:pointer_x})x({$root:pointer_y})"/>
	</action>
	<action>
          <write_console value="pixel ({$config:pixel_color_r})"/>
	</action>
	<action>
          <write_console value="frame ({@config:frame_color_r})"/>
	</action -->
      <!-- /command>
    </renderingScript>
    <quad id="NullQuad" x1="0" y1="0" z1="0" x2="0" y2="0" z2="0" x3="0" y3="0" z3="0" x4="0" y4="0" z4="0"></quad>
  </node -->
 	
</node>
